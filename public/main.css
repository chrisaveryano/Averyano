/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
.home__responsive, .home__wrapper, .home__gallery, .navigation, .loader, .preloader, html, .home, .home__contact {
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  object-fit: cover;
}

.home__responsive__image figure, .home__responsive__wrapper, .home__hero__right, .home__gallery__video__container, .home__contact__wrapper, .loader__container, .loader, .preloader {
  display: flex;
  align-items: center;
  justify-content: center;
}

.video__controls--pause, .video__controls--play {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.dg.ac {
  z-index: 99999 !important;
}

.footer__list__item .footer__list__link, .navigation__list__link {
  position: relative;
  overflow: hidden;
  display: inline-block;
  vertical-align: top;
}

.footer__list__item .footer__list__link:after, .navigation__list__link:after {
  content: "";
  position: absolute;
  bottom: 1.2rem;
  left: 0;
  width: 100%;
  height: 1px;
  background: currentColor;
  transition: transform 0.7s cubic-bezier(0.19, 1, 0.22, 1);
}

.footer__list__item .footer__list__link:hover:after, .navigation__list__link:hover:after {
  transform: scaleX(1);
  transform-origin: left center;
}

.footer__list__item .footer__list__link:after, .navigation__list__link:after {
  transform: scaleX(0);
  transform-origin: right center;
}

.footer__list__item .footer__list__link, .navigation__list__link {
  display: inline-block;
}
.home__gallery__item__link {
  font-size: 1rem;
}

.home__hero__link, .home__hero__description, .home__gallery__item__subtitle, .loader__text {
  font-size: 1.2rem;
}

.home__responsive__description, .footer__right__socials, .footer__left, .loader__cross, .preloader__number {
  font-size: 1.6rem;
}

.footer__right__links {
  font-size: 2.4rem;
}

.home__gallery__item__title, .navigation__list__item:first-child {
  font-size: 2.4rem;
}

.home__contact__button__text, .preloader__text {
  font-size: 3.6rem;
}

.home__responsive__title, .home__gallery__title {
  font-size: 4.2rem;
}

.home__hero__title {
  font-size: 7.2rem;
}

.home, .home__contact {
  z-index: 2;
}

/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

*,
*:after,
*:before {
  box-sizing: border-box;
}

html {
  font-family: "Raleway", sans-serif;
  font-size: 0.6944444444vw;
  line-height: 1;
  color: rgb(245, 239, 225);
  background: rgb(1, 1, 1);
  overflow: hidden;
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}
@media (max-width: 767px) {
  html {
    font-size: 2vw;
  }
}
@media (max-width: 1023px) {
  html {
    overflow: auto;
    overflow-x: hidden;
  }
}

a {
  text-decoration: none;
  color: inherit;
  outline: none;
}

button {
  background: none;
  border: none;
  color: inherit;
  cursor: pointer;
  outline: none;
}

h1,
h2,
h3 {
  font-weight: bold;
}

.content {
  overflow: hidden;
}

.preloader {
  flex-direction: column;
  text-align: center;
  font-weight: normal;
  background: rgb(1, 1, 1);
  color: rgb(245, 239, 225);
  z-index: 4;
  display: flex;
  height: 100vh;
  position: fixed;
}

.preloader__text {
  font-weight: bolder;
  text-transform: uppercase;
  padding-bottom: 2rem;
}

.preloader__circle {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 40rem;
  height: 40rem;
  animation: rotating 1.75s cubic-bezier(0, 0, 0.975, 1) infinite;
}
.preloader__circle::before {
  content: "";
  position: absolute;
  inset: 0;
  padding: 1px;
  border-radius: 50%;
  background: linear-gradient(to bottom, rgb(255, 255, 255), rgba(255, 255, 255, 0), rgba(255, 255, 255, 0));
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
}

@keyframes rotating {
  0% {
    transform: translate(-50%, -50%) rotate(18deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(377deg);
  }
}
.loader {
  flex-direction: column;
  text-align: center;
  font-weight: normal;
  background: rgb(1, 1, 1);
  color: rgb(245, 239, 225);
  z-index: 4;
  display: flex;
  height: 100vh;
  width: 100vw;
  position: fixed;
  transform: translate(0%, 100%);
  transition-duration: 1.44s;
  transition-timing-function: cubic-bezier(0.66, 0, 0.34, 1);
  transform-origin: top;
}

.loader__container {
  flex-direction: column;
  position: relative;
  min-height: 30rem;
  max-width: 41rem;
  opacity: 0;
  visibility: hidden;
}

.loader__text {
  font-weight: 300;
  line-height: 2.2rem;
}

.loader__cross {
  cursor: pointer;
  position: absolute;
  top: 0;
  right: 0;
  width: 1.6rem;
  height: 1.6rem;
}
.loader__cross:hover {
  opacity: 0.8;
}

.loader__text a {
  color: #c471ed;
}

.navigation {
  color: rgb(245, 239, 225);
  z-index: 3;
  position: fixed;
  pointer-events: none;
}

.navigation__wrapper {
  transform: translateY(-100%);
}

.navigation__link {
  height: 2.4rem;
  font-size: 0;
  position: absolute;
  left: 4rem;
  top: 4rem;
  width: 12.8rem;
  pointer-events: auto;
  height: 2rem;
  transition: opacity 0.4s ease;
}
.navigation__link:hover {
  opacity: 0.5;
}
@media (max-width: 767px) {
  .navigation__link {
    left: 5rem;
    top: 5rem;
    width: 27.9rem;
    height: 4.3rem;
  }
}

.navigation__link__icon {
  display: block;
}

.navigation__list {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  width: 100%;
  height: 4rem;
  align-content: center;
  align-items: center;
}
@media (max-width: 1023px) {
  .navigation__list {
    font-size: 150%;
  }
}

.navigation__list__item {
  pointer-events: auto;
  height: inherit;
}
.navigation__list__item:first-child {
  font-weight: 900;
  width: 70%;
}

.navigation__list__link {
  display: flex;
  line-height: 1;
  height: inherit;
  align-items: center;
  opacity: 1;
}
@media (max-width: 767px) {
  .navigation__list__link {
    height: 6rem;
    padding: 1rem 0rem;
    margin: 0 1.5rem;
  }
}

.navigation__list__link:hover {
  opacity: 0.75;
}

.navigation__list__link--logo {
  display: flex;
  line-height: 1;
  height: inherit;
  align-items: center;
  padding: 0 2rem;
}
@media (min-width: 1025px) {
  .navigation__list__link--logo {
    position: absolute;
    left: 0;
    padding: 0 3rem;
  }
}
.navigation__list__link--logo a {
  height: inherit;
}
.navigation__list__link--logo img {
  height: inherit;
}
.navigation__list__link--logo img:hover {
  opacity: 0.85;
}

.scroll__nav {
  position: absolute;
  right: 0;
  top: 0;
  width: 0.3rem;
  height: 100vh;
  border-radius: 1rem;
  background: rgb(245, 239, 225);
  z-index: 1;
  visibility: visible;
  opacity: 1;
}
@media (max-width: 1023px) {
  .scroll__nav {
    visibility: hidden;
    opacity: 0;
  }
}

.scroll__nav__bar {
  position: relative;
  top: 0;
  right: 0;
  width: 0.3rem;
  height: 100%;
  border-radius: 1rem;
  background: rgb(1, 1, 1);
  z-index: 1;
}

.footer {
  position: relative;
}

.footer__wrapper {
  display: flex;
  align-items: flex-end;
}

.footer__left {
  flex-grow: 1;
  padding-bottom: 3.2rem;
  padding-left: 6.4rem;
}
@media (max-width: 767px) {
  .footer__left {
    padding-left: 1.25rem;
    padding-bottom: 7.5rem;
    font-size: 110%;
  }
}

.footer__right__wrapper {
  display: flex;
}

.footer__right__links {
  position: relative;
}

.footer__right__links__menu {
  padding: 4.7rem 5.8rem;
}
@media (max-width: 767px) {
  .footer__right__links__menu {
    padding: 4.7rem 3.8rem;
  }
}

.footer__right__socials {
  position: relative;
}

.footer__right__hr {
  background-image: linear-gradient(to bottom, transparent, rgba(255, 255, 255, 0.15), rgb(255, 255, 255), rgba(255, 255, 255, 0.15), transparent);
  width: 2px;
  margin: 10px 2px;
  position: absolute;
  height: 100%;
}

.footer__right__socials__menu {
  padding: 4.7rem 5.8rem;
}
@media (max-width: 767px) {
  .footer__right__socials__menu {
    padding: 4.7rem 3.8rem;
  }
}

.footer__list__item {
  margin-top: 2.8rem;
}
.footer__list__item:first-of-type {
  margin-top: 0rem;
}
@media (max-width: 767px) {
  .footer__list__item {
    font-size: 55%;
  }
}

.footer__list__item .footer__list__link {
  min-height: 4.2rem;
}

.footer__list__item--socials .footer__list__link img {
  padding-right: 0.8rem;
  margin-bottom: -0.25rem;
}

@media (max-width: 767px) {
  .footer__list__item--socials .footer__list__link img {
    max-width: 16px;
  }
}
.footer__list__item--socials .footer__list__link {
  font-size: 80%;
  display: flex;
  justify-content: flex-start;
}

.footer__list__item--socials {
  margin-top: 3.8rem;
}
.footer__list__item--socials:first-of-type {
  margin-top: 0rem;
}

.footer__list__link:hover {
  opacity: 0.75;
}

.home__contact__wrapper {
  height: 100vh;
  position: relative;
}

.home__contact__button {
  width: 40rem;
  height: 40rem;
  transform: translate(0, 0) rotate(254deg) scale(1);
  transition-property: transform;
  transition-duration: 1s;
  transition-timing-function: cubic-bezier(0, 0.83, 0.31, 1.07);
}
.home__contact__button::before {
  content: "";
  position: absolute;
  inset: 0;
  padding: 2px;
  border-radius: 50%;
  background: linear-gradient(to bottom, rgb(255, 255, 255), rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
}

@keyframes circleAnimate {
  0% {
    transform: translate(0, 0) rotate(254deg) scale(1);
  }
  100% {
    transform: translate(0, 0) rotate(2774deg) scale(1);
  }
}
.circleanimate {
  animation: circleAnimate 3.5s cubic-bezier(0.84, 0.12, 0, 0.84);
}

.home__contact__button__text {
  font-weight: bolder;
  text-transform: uppercase;
  max-width: 15.5rem;
  position: absolute;
  left: 50%;
  top: 49%;
  transform: translate(-50%, -49%);
  opacity: 1;
}
.home__contact__button__text:hover {
  opacity: 0.8;
}

.home__gallery {
  position: relative;
  border-top: rgb(1, 1, 1) 2px solid;
  background: #010101;
  z-index: 2;
}

.home__gallery__title {
  padding: 2.2rem;
  position: absolute;
  top: 6.5rem;
  left: 2.2rem;
}
@media (max-width: 767px) {
  .home__gallery__title {
    top: 3.5rem;
  }
}

.home__gallery__wrapper {
  display: grid;
  align-items: center;
  justify-content: center;
  grid-template-columns: repeat(2, 49%);
  grid-gap: 3rem;
  padding: 3rem;
  margin-bottom: 10rem;
  margin-top: -7rem;
}
@media (max-width: 767px) {
  .home__gallery__wrapper {
    grid-template-columns: 100%;
    margin-top: 10rem;
  }
}

.home__gallery__item {
  position: relative;
  z-index: 1;
  background: linear-gradient(45deg, rgb(0, 0, 0), rgba(0, 0, 0, 0.63), rgb(0, 0, 0));
  max-width: 69rem;
  margin-top: 10rem;
  border-radius: 1rem;
}
@media (max-width: 767px) {
  .home__gallery__item {
    margin-top: 1rem;
  }
}
.home__gallery__item:first-of-type {
  margin: 0 0;
}
.home__gallery__item::before {
  content: "";
  position: absolute;
  inset: 0;
  padding: 1px;
  border-radius: 1rem;
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.61), rgba(255, 255, 255, 0), rgba(255, 255, 255, 0));
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  pointer-events: none;
  opacity: 0.2;
}

@media (min-width: 769px) {
  #g2 {
    margin-top: 41rem;
  }
  #g3 {
    margin-top: -41rem;
  }
  #g4 {
    margin-top: 0rem;
  }
  #g5 {
    margin-top: -20.5rem;
  }
}
#g2::before {
  background: linear-gradient(150deg, rgba(255, 255, 255, 0.61), rgba(255, 255, 255, 0), rgba(255, 255, 255, 0));
}

#g3::before {
  background: linear-gradient(322deg, rgba(255, 255, 255, 0.61), rgba(255, 255, 255, 0), rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.61));
}

#g4::before {
  background: linear-gradient(39deg, rgba(255, 255, 255, 0.61), rgba(255, 255, 255, 0.11), rgba(255, 255, 255, 0), rgba(255, 255, 255, 0));
}

#g5::before {
  background: linear-gradient(222deg, rgba(255, 255, 255, 0.61), rgba(255, 255, 255, 0), rgba(255, 255, 255, 0));
}

.home__gallery__item__top {
  padding: 2.4rem;
  padding-top: 4.2rem;
  border-radius: 1rem 1rem 0 0;
  background: linear-gradient(to top, rgba(255, 255, 255, 0.02), rgb(0, 0, 0));
  border-bottom: 1px solid rgb(0, 0, 0);
}

.home__gallery__item__subtitle {
  color: rgb(192, 192, 192);
  padding-top: 0.6rem;
}

.home__gallery__item__content {
  position: relative;
  height: 100%;
  width: 100%;
  padding: 0 6.4rem;
}

.home__gallery__video__container {
  height: 100%;
  width: 100%;
  overflow: hidden;
}

.home__gallery__item__video {
  filter: brightness(0.5);
  border-radius: 0 0 0 0.4rem;
  transition: all 1.2s cubic-bezier(0.19, 1, 0.22, 1);
  transform: scale(1);
}
@media (max-width: 767px) {
  .home__gallery__item__video {
    transform: scale(1.15);
  }
}

.home__gallery__item__video.playing {
  filter: brightness(1);
}

.video__controls__wrapper {
  width: 100%;
  height: 100%;
  margin: auto;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  overflow: hidden;
  cursor: pointer;
  z-index: 1;
}

.home__gallery__item__content:hover > .home__gallery__video__container .home__gallery__item__video {
  transform: scale(1.15);
}

@media (max-width: 767px) {
  .home__gallery__item__content:hover > .home__gallery__video__container .home__gallery__item__video {
    transform: scale(1);
  }
}
.video__controls__wrapper:hover > .video__controls--play {
  opacity: 1;
}

.video__controls__wrapper:hover > .video__controls--fullscreen {
  opacity: 1;
  transform: translateY(0) rotate(0deg);
}

.video__controls {
  max-width: 64px;
  max-height: 64px;
}
.video__controls--progressbar {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  max-width: 100%;
  height: 0.32rem;
  transform: translateX(0);
  transition-property: transform;
  transition-duration: 0.3s;
  transition-timing-function: ease-out;
  transform-origin: left;
  background: rgb(245, 239, 225);
}
.video__controls--fullscreen {
  display: none;
  position: absolute;
  right: 6.4rem;
  bottom: 0;
  max-width: fit-content;
  padding: 3rem;
  text-transform: uppercase;
  transition: all 1.75s cubic-bezier(0.19, 1, 0.22, 1);
  opacity: 0;
  transform: translateY(7.5rem) rotate(45deg);
}
.video__controls--play {
  z-index: 1;
  visibility: inherit;
  opacity: 0.8;
  transition: opacity 0.4s ease-out;
}
.video__controls--pause {
  visibility: hidden;
  opacity: 0.8;
  transition-property: opacity;
  transition-duration: 0.4s;
  transition-timing-function: ease-out;
}
.video__controls__wrapper {
  position: absolute;
  left: 0;
  top: 0;
  width: inherit;
  height: inherit;
}
.video__controls__wrapper--locked {
  position: absolute;
  left: 0;
  top: 0;
  width: inherit;
  height: inherit;
}

.home__gallery__item__bottom {
  padding: 2.4rem 1.6rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: rgb(0, 0, 0);
  border-radius: 0 0 1rem 1rem;
}

.home__gallery__item__link {
  opacity: 0.85;
  color: rgb(192, 192, 192);
}
.home__gallery__item__link:hover {
  opacity: 1;
}

.home__hero {
  z-index: 1;
  height: 100vh;
  display: block;
  position: relative;
  overflow: hidden;
}

.home__hero__wrapper {
  height: inherit;
  z-index: 1;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  background: rgba(1, 1, 1, 0.25);
}
@media (max-width: 767px) {
  .home__hero__wrapper {
    flex-direction: column-reverse;
  }
}

.home__hero__left {
  width: 40%;
  height: 100%;
  background: rgb(1, 1, 1);
  background: rgba(1, 1, 1, 0.9);
  backdrop-filter: blur(40px) saturate(1.5);
  padding-bottom: 15%;
}
@media (max-width: 767px) {
  .home__hero__left {
    width: fit-content;
    height: fit-content;
    padding: 5rem 0;
  }
}

.home__hero__left__content {
  max-width: 100%;
  height: inherit;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  padding: 0 10rem;
}
@media (max-width: 767px) {
  .home__hero__left__content {
    padding: 0 3rem;
  }
}

.home__hero__title {
  display: inline-block;
  font-weight: 900;
  background: linear-gradient(45deg, rgba(0, 0, 0, 0.25), #c471ed, #f7797d, rgba(0, 0, 0, 0.25));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  padding-bottom: 2.4rem;
}

.home__hero__description {
  font-weight: 300;
  line-height: 2.2rem;
}
.home__hero__description:nth-child(3) {
  padding: 2.4rem 0;
}

.home__hero__link {
  font-weight: 300;
  line-height: 2.2rem;
  color: #c471ed;
}
.home__hero__link:hover {
  opacity: 0.75 !important;
}

.home__hero__right {
  position: relative;
  width: 100%;
  height: 100%;
  max-width: 70rem;
  padding: 8rem;
}

.home__hero__img {
  width: inherit;
  height: auto;
}

.home__hero__img__title {
  position: absolute;
  bottom: 9.5rem;
  right: 9.5rem;
}

.hero__grid {
  z-index: -1;
  position: absolute;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100%;
  transform: rotate(-15deg) scale(0.4) translate(-110%, -100%);
  display: flex;
  flex-direction: column;
  background: rgb(1, 1, 1);
}

.hero__grid__wrapper {
  position: relative;
  display: grid;
  grid-gap: 3rem;
  grid-template-columns: repeat(24, 20rem);
  grid-template-rows: repeat(21, 20rem);
  padding-top: 3rem;
  animation: heromoves 45s linear infinite;
}
.hero__grid__wrapper * {
  background-size: cover !important;
  background-position: center !important;
}
.hero__grid__wrapper img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}
@media (min-width: 1025px) {
  .hero__grid__wrapper img {
    opacity: 0;
    transform: scale(0);
  }
}
@media (max-width: 767px) {
  .hero__grid__wrapper {
    flex-direction: column-reverse;
  }
}

.hero__square--s {
  grid-row: span 3;
  grid-column: span 3;
}

.hero__square--m {
  grid-row: span 4;
  grid-column: span 4;
}

.hero__square--l {
  grid-row: span 5;
  grid-column: span 5;
}

.hero__square--xl {
  grid-row: span 6;
  grid-column: span 6;
}

.hero__square--xxl {
  grid-row: span 7;
  grid-column: span 7;
}

.hero__rectangular--s {
  grid-row: span 3;
  grid-column: span 6;
}

.hero__rectangular--m {
  grid-row: span 4;
  grid-column: span 8;
}

.hero__rectangular--l {
  grid-row: span 4;
  grid-column: span 10;
}

.hero__rectangular--xl {
  grid-row: span 6;
  grid-column: span 10;
}

.hero__rectangular--s--90 {
  grid-row: span 6;
  grid-column: span 3;
}

.hero__rectangular--m--90 {
  grid-row: span 8;
  grid-column: span 4;
}

.hero__rectangular--l--90 {
  grid-row: span 10;
  grid-column: span 4;
}

.hero__rectangular--xl--90 {
  grid-row: span 10;
  grid-column: span 6;
}

@keyframes heromoves {
  0% {
    transform: translateY(0%);
  }
  100% {
    transform: translateY(-100%);
  }
}
.home {
  opacity: 0;
  visibility: hidden;
}

.main-bg-noise {
  height: calc(var(--vh, 1vh) * 100);
  left: 0;
  pointer-events: none;
  position: fixed;
  top: 0;
  width: 100vw;
  z-index: 5;
}

.main-bg-noise:after {
  animation: grain 8s steps(10) infinite;
  background-image: url("https://www.averyano.com/images/noise.jpg");
  content: "";
  height: 300%;
  left: -50%;
  opacity: 0.01;
  position: fixed;
  top: -100%;
  width: 300%;
}

@keyframes grain {
  0%, 100% {
    transform: translate(0, 0);
  }
  10% {
    transform: translate(-5%, -10%);
  }
  20% {
    transform: translate(-15%, 5%);
  }
  30% {
    transform: translate(7%, -25%);
  }
  40% {
    transform: translate(-5%, 25%);
  }
  50% {
    transform: translate(-15%, 10%);
  }
  60% {
    transform: translate(15%, 0%);
  }
  70% {
    transform: translate(0%, 15%);
  }
  80% {
    transform: translate(3%, 25%);
  }
  90% {
    transform: translate(-10%, 10%);
  }
}
.home__responsive {
  position: relative;
  margin-top: 5rem;
}

.home__responsive__wrapper {
  flex-direction: column;
  color: rgb(245, 239, 225);
  padding: 14rem 4rem 10rem;
}

.home__responsive__title {
  padding: 2.2rem;
}

.home__responsive__images {
  margin: 2.4rem 0;
}

.home__responsive__image {
  width: inherit;
}

.home__responsive__image img {
  width: inherit;
  -webkit-user-drag: none;
}
@media (max-width: 767px) {
  .home__responsive__image img {
    max-width: 75rem;
    margin: auto;
  }
}

.home__responsive__description {
  text-align: center;
  max-width: 95.2rem;
  padding-top: 2.2rem;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/